{{- $name := include "kubeadmiral.name" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}-hpa-aggregator
  namespace: {{ include "kubeadmiral.namespace" . }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "2"
  labels:
    app: {{ $name }}-hpa-aggregator
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $name }}-hpa-aggregator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ $name }}-hpa-aggregator
    spec:
      automountServiceAccountToken: false
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - {{ $name }}-hpa-aggregator
              topologyKey: kubernetes.io/hostname
      containers:
        - name: {{ $name }}-hpa-aggregator
          command:
            - /kubeadmiral-hpa-aggregator
            - --bind-address=0.0.0.0
            - --client-ca-file=/etc/kubeadmiral/pki/ca.crt
            - --requestheader-allowed-names=front-proxy-client
            - --requestheader-client-ca-file=/etc/kubeadmiral/pki/front-proxy-ca.crt
            - --requestheader-extra-headers-prefix=X-Remote-Extra-
            - --requestheader-group-headers=X-Remote-Group
            - --requestheader-username-headers=X-Remote-User
            - --tls-cert-file=/etc/kubeadmiral/pki/apiserver.crt
            - --tls-private-key-file=/etc/kubeadmiral/pki/apiserver.key
            - --secure-port=443
            - --kubeconfig=/etc/kubeconfig
            - --authentication-kubeconfig=/etc/kubeconfig
            - --authorization-kubeconfig=/etc/kubeconfig
            - --kube-api-burst=100
            - --kube-api-qps=50
            - --feature-gates=APIPriorityAndFairness=false
            - --klog-v=4
            {{- include "kubeadmiral.kubeadmiralHpaAggregator.extraCommandArgs" . | nindent 12 }}
          image: {{ template "kubeadmiral.kubeadmiralHpaAggregator.image" . }}
          imagePullPolicy: {{ .Values.kubeadmiralHpaAggregator.image.pullPolicy }}
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /livez
              port: 443
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 443
              scheme: HTTPS
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 15
          resources:
            requests:
              cpu: 250m
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/kubeadmiral/pki
              name: kubeadmiral-certs
              readOnly: true
            - mountPath: /etc/kubeconfig
              subPath: kubeconfig
              name: kubeconfig
        - command:
            - kube-controller-manager
            - --allocate-node-cidrs=true
            - --authentication-kubeconfig=/etc/hpa-kubeconfig
            - --authorization-kubeconfig=/etc/hpa-kubeconfig
            - --bind-address=0.0.0.0
            - --client-ca-file=/etc/kubeadmiral/pki/ca.crt
            - --cluster-cidr=10.244.0.0/16
            - --cluster-name=kubeadmiral
            - --cluster-signing-cert-file=/etc/kubeadmiral/pki/ca.crt
            - --cluster-signing-key-file=/etc/kubeadmiral/pki/ca.key
            - --controllers=horizontalpodautoscaling
            - --kubeconfig=/etc/hpa-kubeconfig
            - --leader-elect=true
            - --leader-elect-resource-name=hpa-controller
            - --requestheader-client-ca-file=/etc/kubeadmiral/pki/front-proxy-ca.crt
            - --root-ca-file=/etc/kubeadmiral/pki/ca.crt
            - --service-cluster-ip-range=10.96.0.0/12
            - --service-account-private-key-file=/etc/kubeadmiral/pki/kubeadmiral.key
            - --use-service-account-credentials=true
            - --v=4
          image: {{ template "kubeadmiral.kubeControllerManager.image" . }}
          imagePullPolicy: {{ .Values.kubeControllerManager.image.pullPolicy }}
          livenessProbe:
            failureThreshold: 8
            httpGet:
              path: /healthz
              port: 10257
              scheme: HTTPS
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          name: hpa-controller
          resources:
            requests:
              cpu: 200m
          volumeMounts:
            - mountPath: /etc/kubeadmiral/pki
              name: kubeadmiral-certs
              readOnly: true
            - mountPath: /etc/hpa-kubeconfig
              subPath: hpa-kubeconfig
              name: kubeconfig
      dnsPolicy: ClusterFirstWithHostNet
      restartPolicy: Always
      tolerations:
        - effect: NoExecute
          operator: Exists
      volumes:
        - name: kubeadmiral-certs
          secret:
            secretName: {{ $name }}-cert-secret
        - name: kubeconfig
          secret:
            secretName: {{ $name }}-kubeconfig-secret
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $name }}-hpa-aggregator
  namespace: {{ include "kubeadmiral.namespace" . }}
  labels:
    app: {{ $name }}-hpa-aggregator
    apiserver: "true"
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 443
  selector:
    app: {{ $name }}-hpa-aggregator
